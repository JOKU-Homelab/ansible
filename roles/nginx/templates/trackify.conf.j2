
# HTTP server - SSL terminated at Traefik level
server {
    listen 80;
    listen [::]:80;
    server_name trackify{{ '-dev' if inventory_hostname.startswith('dev') }}.jokulab.ch _;

    root {{ trackify_web_root }};
    index index.html;

    # Access and error logs
    access_log {{ nginx_log_dir }}/trackify_access.log main;
    error_log {{ nginx_log_dir }}/trackify_error.log;

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Handle static assets with caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|mp4|mp3|pdf)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff;
        
        # CORS headers for web fonts
        location ~* \.(woff|woff2|ttf|eot)$ {
            add_header Access-Control-Allow-Origin "*";
        }
    }

    # Handle service worker
    location = /sw.js {
        add_header Cache-Control "no-cache";
        proxy_cache_bypass 1;
        proxy_no_cache 1;
        expires off;
    }

    # Handle manifest.json
    location = /manifest.json {
        add_header Cache-Control "public, max-age=31536000";
    }

    # React Router fallback - serve index.html for any unmatched routes
    location / {
        try_files $uri $uri/ /index.html;
        
        # Security headers for HTML content
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "strict-origin-when-cross-origin";
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:; frame-ancestors 'none';";
    }

    # Security locations
    location ~ /\.ht {
        deny all;
    }
    
    location ~ /\. {
        deny all;
    }

    # Deny access to sensitive files
    location ~* \.(env|log|sql|conf)$ {
        deny all;
    }

    # Handle error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root {{ trackify_web_root }};
    }
}

# WebSocket upgrade map
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}
