
---
- name: Generate main nginx configuration
  template:
    src: nginx.conf.j2
    dest: "{{ nginx_conf_dir }}/nginx.conf"
    owner: root
    group: root
    mode: '0644'
    backup: yes
  notify: restart nginx
  tags: nginx_config

- name: Generate Trackify site configuration
  template:
    src: trackify.conf.j2
    dest: "{{ nginx_conf_dir }}/sites-available/trackify.conf"
    owner: root
    group: root
    mode: '0644'
  notify: restart nginx
  tags: nginx_config

- name: Enable Trackify site
  file:
    src: "{{ nginx_conf_dir }}/sites-available/trackify.conf"
    dest: "{{ nginx_conf_dir }}/sites-enabled/trackify.conf"
    state: link
  notify: restart nginx
  tags: nginx_config

- name: Remove default nginx configuration
  file:
    path: "{{ nginx_conf_dir }}/conf.d/default.conf"
    state: absent
  notify: restart nginx
  tags: nginx_config

- name: Configure logrotate for nginx
  template:
    src: nginx.logrotate.j2
    dest: /etc/logrotate.d/nginx
    owner: root
    group: root
    mode: '0644'
  tags: nginx_config

- name: Configure SELinux booleans for nginx (if enabled)
  seboolean:
    name: "{{ item }}"
    state: yes
    persistent: yes
  loop:
    - httpd_can_network_connect
    - httpd_can_network_relay
    - httpd_read_user_content
  when: 
    - ansible_selinux.status == "enabled"
    - nginx_selinux_enabled | default(true)
  tags: 
    - nginx_config
    - selinux

- name: Set SELinux file context for web content directories
  sefcontext:
    target: "{{ item.path }}"
    setype: "{{ item.setype }}"
    state: present
  loop:
    - { path: "/var/www(/.*)?", setype: "httpd_exec_t" }
    - { path: "{{ trackify_web_root }}(/.*)?", setype: "httpd_exec_t" }
  when: 
    - ansible_selinux.status == "enabled"
    - nginx_selinux_enabled | default(true)
  notify: restore selinux contexts
  tags: 
    - nginx_config
    - selinux

- name: Ensure web content has correct ownership
  file:
    path: "{{ item }}"
    owner: "{{ nginx_user | default('nginx') }}"
    group: "{{ nginx_group | default('nginx') }}"
    recurse: yes
    state: directory
  loop:
    - "/var/www"
    - "{{ trackify_web_root }}"
  tags: nginx_config

- name: Set correct permissions for web directories
  file:
    path: "{{ item }}"
    mode: '0755'
    state: directory
    recurse: yes
  loop:
    - "/var/www"
    - "{{ trackify_web_root }}"
  tags: nginx_config

- name: Set correct permissions for web files
  shell: |
    find {{ item }} -type f -exec chmod 644 {} \;
  loop:
    - "/var/www"
    - "{{ trackify_web_root }}"
  changed_when: false
  tags: nginx_config

- name: Validate nginx configuration
  command: nginx -t
  register: nginx_syntax_check
  changed_when: false
  failed_when: nginx_syntax_check.rc != 0
  tags: nginx_config