
# Spring Boot Configuration for Trackify Backend
# Generated by Ansible Spring Boot Role

# Server configuration
server.port={{ spring_boot_port }}
server.servlet.context-path=
management.server.port={{ spring_boot_management_port }}

# Spring profiles
spring.profiles.active={{ spring_boot_profiles_active }}
spring.application.name=trackify-backend

# Database configuration
spring.datasource.url=jdbc:postgresql://{{ trackify_database_host }}:{{ trackify_database_port }}/{{ trackify_database_name }}
spring.datasource.username={{ trackify_database_username }}
spring.datasource.password={{ trackify_database_password }}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql={{ 'true' if inventory_hostname.startswith('dev') else 'false' }}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql={{ 'true' if inventory_hostname.startswith('dev') else 'false' }}

# Flyway configuration
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration

# MinIO/S3 configuration
s3.url={{ trackify_minio_url }}
s3.username={{ trackify_minio_username }}
s3.password={{ trackify_minio_password }}

# Keycloak OAuth2 configuration
spring.security.oauth2.client.provider.trackify.issuer-uri={{ trackify_keycloak_base_url }}/realms/{{ trackify_keycloak_realm }}
spring.security.oauth2.client.registration.trackify.provider=trackify
spring.security.oauth2.client.registration.trackify.client-name=trackify
spring.security.oauth2.client.registration.trackify.client-id={{ trackify_keycloak_client_id }}
spring.security.oauth2.client.registration.trackify.client-secret={{ trackify_keycloak_client_secret }}
spring.security.oauth2.client.registration.trackify.scope=openid,offline_access,profile
spring.security.oauth2.client.registration.trackify.authorization-grant-type=authorization_code

# Actuator configuration
management.endpoints.web.exposure.include=health,metrics,info,prometheus
management.endpoint.health.show-details=when-authorized
management.endpoint.health.probes.enabled=true
management.health.readiness-state.enabled=true
management.health.liveness-state.enabled=true

# Logging configuration
logging.level.root={{ spring_boot_log_level }}
logging.level.ch.bbzbl_it={{ 'DEBUG' if inventory_hostname.startswith('dev') else 'INFO' }}
logging.level.org.springframework.security={{ 'DEBUG' if inventory_hostname.startswith('dev') else 'WARN' }}
logging.pattern.console={{ spring_boot_log_pattern }}
logging.file.name={{ spring_boot_log_dir }}/application.log
logging.logback.rollingpolicy.max-file-size=10MB
logging.logback.rollingpolicy.total-size-cap=1GB
logging.logback.rollingpolicy.max-history=30

# CORS configuration
spring.web.cors.allowed-origins=https://trackify{{ '-dev' if inventory_hostname.startswith('dev') }}.jokulab.ch
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=Authorization,Cache-Control,Content-Type,X-CSRF-TOKEN
spring.web.cors.allow-credentials=true

# Multipart file upload configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=50MB
