
# Dynamic Configuration for Traefik
# Generated by Ansible Traefik Role for Trackify Project

http:
  # Middleware definitions
  middlewares:
    # Security headers
    security-headers:
      headers:
        frameDeny: {{ traefik_security_headers.frameDeny | lower }}
        contentTypeNosniff: {{ traefik_security_headers.contentTypeNosniff | lower }}
        browserXssFilter: {{ traefik_security_headers.browserXssFilter | lower }}
        referrerPolicy: "{{ traefik_security_headers.referrerPolicy }}"
{% if traefik_ssl_enabled and traefik_security_headers.forceSTSHeader %}
        forceSTSHeader: {{ traefik_security_headers.forceSTSHeader | lower }}
        stsIncludeSubdomains: {{ traefik_security_headers.stsIncludeSubdomains | lower }}
        stsPreload: {{ traefik_security_headers.stsPreload | lower }}
        stsSeconds: {{ traefik_security_headers.stsSeconds }}
{% endif %}
        customRequestHeaders:
          X-Forwarded-Proto: "https"
        customResponseHeaders:
          X-Powered-By: "Traefik"

{% if traefik_rate_limit_enabled %}
    # Rate limiting
    rate-limit:
      rateLimit:
        burst: {{ traefik_rate_limit_burst }}
        average: {{ traefik_rate_limit_average }}
{% endif %}

{% if traefik_dashboard_enabled and traefik_dashboard_auth_enabled %}
    # Dashboard authentication
    dashboard-auth:
      basicAuth:
        usersFile: "{{ traefik_config_dir }}/.htpasswd"
{% endif %}

    # CORS middleware for API
    cors-headers:
      headers:
        accessControlAllowMethods:
          - GET
          - OPTIONS
          - PUT
          - POST
          - DELETE
        accessControlAllowOriginList:
          - "https://{{ traefik_trackify_subdomain }}.{{ traefik_domain }}"
          - "https://{{ traefik_trackify_dev_subdomain }}.{{ traefik_domain }}"
        accessControlMaxAge: 100
        addVaryHeader: true

    strip-minio-prefix:
      stripPrefix:
        prefixes:
          - "/minio"
    strip-files-prefix:
      stripPrefix:
        prefixes:
          - "/files"

  # Service definitions
  services:
{% for service_name, service_config in traefik_backend_services.items() %}
    {{ service_name }}:
      loadBalancer:
        servers:
          - url: "{{ service_config.backend_url }}"
{% if service_config.health_check is defined %}
        healthCheck:
          path: "{{ service_config.health_check }}"
          interval: "30s"
          timeout: "5s"
{% endif %}

  # Router definitions
  routers:
{% if traefik_dashboard_enabled %}
    # Dashboard router
    dashboard:
      rule: "Host(`{{ traefik_dashboard_domain }}`)"
      service: api@internal
      entryPoints:
        - websecure
{% if traefik_ssl_enabled and traefik_letsencrypt_enabled %}
      tls:
        certResolver: letsencrypt
{% endif %}
{% if traefik_dashboard_auth_enabled %}
      middlewares:
        - dashboard-auth
        - security-headers
{% endif %}
{% endif %}

{% for service_name, service_config in traefik_backend_services.items() %}
    # {{ service_name }} router
    {{ service_name }}:
      rule: "Host(`{{ service_config.domain }}`){% if service_config.path_prefix is defined %} && PathPrefix(`{{ service_config.path_prefix }}`){% endif %}"
      service: {{ service_name }}
      entryPoints:
        - websecure
{% if traefik_ssl_enabled and traefik_letsencrypt_enabled %}
      tls:
        certResolver: letsencrypt
{% endif %}
      middlewares:
        - security-headers
{% if service_name.endswith('-api') or service_name.endswith('-api-dev') %}
        - cors-headers
{% endif %}
{% if traefik_rate_limit_enabled %}
        - rate-limit
{% endif %}
{% if service_name.endswith('-minio') or service_name.endswith('-minio-dev') %}
{% if service_config.strip_prefix %}
        - strip-minio-prefix
{% endif %}
{% endif %}
{% if service_name.endswith('-minio-api') or service_name.endswith('-minio-api-dev') %}
{% if service_config.strip_prefix %}
        - strip-files-prefix
{% endif %}
{% endif %}
{% endfor %}

{% endfor %}

{% if traefik_ssl_enabled and traefik_generate_selfsigned_cert %}
# TLS certificates (fallback self-signed)
tls:
  certificates:
    - certFile: {{ traefik_ssl_dir }}/traefik.crt
      keyFile: {{ traefik_ssl_dir }}/traefik.key
      stores:
        - default
{% endif %}
